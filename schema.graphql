type Collection @entity {
    id: ID!
    collectionId: Float! @index
    issuer: String! @index
    admin: String! @index
    owner: String! @index
    freezer: String
    metadataCid: String
    isDestroyed: Boolean!
    createdAt: BigInt @index
    updatedAt: BigInt @index
    items: [Item] @derivedFrom(field: "collection")
    podId: Float @index
}

type Item @entity @compositeIndexes(fields: [["owner", "itemId"]]) {
    id: ID!
    itemId: Float! @index
    collectionItemKey: String! @index
    collection: Collection!
    metadataCid: String
    isBurned: Boolean!
    createdAt: BigInt @index
    updatedAt: BigInt @index
    owner: String
    podId: Float @index
}

type BalanceTransfer @entity @compositeIndexes(fields: [["from", "to"]]) {
    id: ID!
    from: String! @index
    to: String! @index
    txHash: String @index
    amount: BigInt @index
    timestamp: BigInt @index
    blockNumber: BigInt
}

type Rewards @entity @compositeIndexes(fields: [["from", "to"]]) {
    id: ID!
    from: String! @index
    to: String! @index
    txHash: String @index
    amount: BigInt @index
    timestamp: BigInt @index
    blockNumber: BigInt
}

type TransferToTreasury @entity @compositeIndexes(fields: [["from", "to"]]) {
    id: ID!
    from: String! @index
    to: String! @index
    txHash: String @index
    amount: BigInt @index
    timestamp: BigInt @index
    blockNumber: BigInt
    isAllocation: Boolean @index
}

type UniquesTransfer @entity @compositeIndexes(fields: [["from", "to"]]) {
    id: ID!
    txHash: String @index
    block: BigInt @index
    from: String @index
    to: String @index
    collection: Collection!
    item: Item!
    fee: BigInt
    timestamp: BigInt @index
    success: Boolean
}

type Pot @entity {
    id: ID!
    potId: Float! @index
    owner: String! @index
    feeQuotaBalance: BigInt!
    feeQuotaLimit: BigInt!
    reserveQuotaBalance: BigInt!
    reserveQuotaLimit: BigInt!
    sponsorshipType: String!
    sponsoredAccounts: [AccountPotBalance] @derivedFrom(field: "pot")
    createdAt: BigInt @index
    updatedAt: BigInt @index
}

type AccountPotBalance @entity @compositeIndexes(fields: [["pot", "account"]]) {
    id: ID!
    pot: Pot!
    account: Account!
    feeQuotaBalance: BigInt!
    feeQuotaLimit: BigInt!
    reserveQuotaBalance: BigInt!
    reserveQuotaLimit: BigInt!
    createdAt: BigInt @index
    updatedAt: BigInt @index
}

type Account @entity {
    id: ID!
    potBalance: [AccountPotBalance] @derivedFrom(field: "account")
    createdAt: BigInt @index
    updatedAt: BigInt @index
}
