specVersion: 1.0.0
name: subql-nodle
version: 1.0.0
runner:
  node:
    name: "@subql/node"
    version: "*"
    options:
      historical: false
  query:
    name: "@subql/query"
    version: "*"
description: "Subquery indexer for Nodle network."
repository: https://github.com/NodleCode/subquery.git
schema:
  file: ./schema.graphql
network:
  chainId: "0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"
  endpoint: "wss://eden-rpc.dwellir.com:443/928f1361-a903-4360-b8ca-4fd786d7214c"
chaintypes:
  file: ./dist/chaintypes.js
dataSources:
  - kind: substrate/Runtime
    startBlock: 1
    mapping:
      file: ./dist/index.js
      handlers:
        - handler: handleUniquesTransferEvent
          kind: substrate/EventHandler
          filter:
            module: uniques
            method: Transferred
        - handler: handleUniquesBurnedEvent
          kind: substrate/EventHandler
          filter:
            module: uniques
            method: Burned
        - handler: handleUniquesDestroyedEvent
          kind: substrate/EventHandler
          filter:
            module: uniques
            method: Destroyed
        - handler: handleUniquesIssuedEvent
          kind: substrate/EventHandler
          filter:
            module: uniques
            method: Issued
        - handler: handleUniquesCreatedEvent
          kind: substrate/EventHandler
          filter:
            module: uniques
            method: Created
        - handler: handleUniquesMetadataSetEvent
          kind: substrate/EventHandler
          filter:
            module: uniques
            method: MetadataSet
        - handler: handleUniquesCollectionMetadataSetEvent
          kind: substrate/EventHandler
          filter:
            module: uniques
            method: CollectionMetadataSet
        - handler: handleUniquesOwnershipAcceptanceChangedEvent
          kind: substrate/EventHandler
          filter:
            module: uniques
            method: OwnershipAcceptanceChanged
        - handler: handleUniquesTeamChangedEvent
          kind: substrate/EventHandler
          filter:
            module: uniques
            method: TeamChanged
        - handler: handleBalancesTransferEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Transfer
        - handler: handleSponsorshipCreatePotCall
          kind: substrate/CallHandler
          filter:
            module: sponsorship
            method: createPot
        - handler: handleSponsorshipRegisterUsersCall
          kind: substrate/CallHandler
          filter:
            module: sponsorship
            method: registerUsers
        - handler: handleSponsorshipRemoveUsersCall
          kind: substrate/CallHandler
          filter:
            module: sponsorship
            method: removeUsers
        - handler: handleSponsorshipUpdatePotLimitsCall
          kind: substrate/CallHandler
          filter:
            module: sponsorship
            method: updatePotLimits
        - handler: handleSponsorshipUpdateSponsorshipTypeCall
          kind: substrate/CallHandler
          filter:
            module: sponsorship
            method: updateSponsorshipType
        - handler: handleSponsorshipUpdateUsersLimitsCall
          kind: substrate/CallHandler
          filter:
            module: sponsorship
            method: updateUsersLimits
        - handler: handleSponsorshipRemovePotCall
          kind: substrate/CallHandler
          filter:
            module: sponsorship
            method: removePot
        - handler: handleSponsorshipSponsorForCall
          kind: substrate/CallHandler
          filter:
            module: sponsorship
            method: sponsorFor
